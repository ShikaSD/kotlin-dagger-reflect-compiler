plugins {
    id 'org.jetbrains.kotlin.jvm'
}

dependencies {
    implementation deps.kotlin.stdlib
    implementation deps.dagger.runtime
    implementation deps.dagger.reflect

    kotlinCompilerPluginClasspath project(':compiler:compiler-plugin')
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all { it ->
    if (it instanceof org.jetbrains.kotlin.gradle.internal.KaptGenerateStubsTask) {
        return
    }

    def isTest = it.name.contains("Test")

    def sourcesDir = new File(buildDir, "generated/source/dagger-reflect-plugin/${it.name}/")

//    if (isTest) {
//        idea.module.testSourceDirs += sourcesDir
//    } else {
//        idea.module.sourceDirs += sourcesDir
//    }
//    idea.module.generatedSourceDirs += sourcesDir

    it.usePreciseJavaTracking = false
    kotlinOptions {
        freeCompilerArgs = [
            "-P",
            "plugin:me.shika.dagger-reflect:outputDir=${sourcesDir.getAbsolutePath()}",
            "-Xreport-perf"
        ]
    }
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
